---
interface PostData {
  title: string;
  text: string;
  image: string;
  type: string;
}

interface Props {
  items: PostData[];
}

const { items } = Astro.props;
---

<div class="relative w-full">
  <div
    class="carousel-container overflow-hidden relative"
    id="carousel"
    data-items={JSON.stringify(items)}
  >
    <div
      id="carousel-items"
      class="flex transition-transform duration-500 ease-in-out"
      style="transform: translateX(0);"
    >
      {
        items.map((item) => (
          <div class="flex-none w-full min-h-screen flex justify-between items-center p-4 md:p-8"> <!-- Ajuste del padding para móviles -->
            <div class="bg-white shadow-lg rounded-lg p-4 md:p-8 flex flex-col md:flex-row w-full max-w-6xl mx-auto relative"> <!-- Cambiamos el layout para móviles -->
              <div class="w-full md:w-1/2"> <!-- Ajustamos el ancho -->
                <h2 class="text-2xl md:text-4xl font-bold mb-4 font-inter text-[#845533]">{item.title}</h2> <!-- Ajuste del tamaño de texto -->
                <h3 class="text-xl md:text-2xl mb-4 font-inter text-[#757575]">{item.type}</h3> <!-- Ajuste del tamaño de texto -->
                <p class="text-sm md:text-lg whitespace-pre-line">{item.text}</p> <!-- Ajuste del tamaño de texto -->
              </div>

              <div class="w-full md:w-1/2 flex justify-center md:justify-end items-center mt-4 md:mt-0"> <!-- Ajustamos la posición de la imagen -->
                <img src={item.image} alt={item.title} class="w-64 h-auto object-cover max-h-64 md:w-96 md:max-h-96" /> <!-- Ajuste del tamaño de imagen -->
              </div>
            </div>
          </div>
        ))
      }
    </div>

    <button id="prevButton" class="absolute top-1/2 left-4 md:left-8 transform -translate-y-1/2 bg-white rounded-full p-2 shadow-lg z-10">
      &#8249;
    </button>

    <button id="nextButton" class="absolute top-1/2 right-4 md:right-8 transform -translate-y-1/2 bg-white rounded-full p-2 shadow-lg z-10">
      &#8250;
    </button>
  </div>
</div>

<script>
  const carousel = document.getElementById("carousel");
  const items = JSON.parse(carousel?.getAttribute("data-items") || "");
  const totalItems = items.length;
  const container = document.getElementById("carousel-items");
  let currentIndex = 0;

  const showSlide = (index: number) => {
    if (index < 0) {
      currentIndex = totalItems - 1;
    } else if (index >= totalItems) {
      currentIndex = 0;
    } else {
      currentIndex = index;
    }

    const translateXValue = -(currentIndex * 100) + "%";
    if (container) {
      container.style.transform = `translateX(${translateXValue})`;
    }
  };

  const prevButton = document.getElementById("prevButton");
  const nextButton = document.getElementById("nextButton");

  if (prevButton) {
    prevButton.addEventListener("click", () => {
      showSlide(currentIndex - 1);
    });
  }

  if (nextButton) {
    nextButton.addEventListener("click", () => {
      showSlide(currentIndex + 1);
    });
  }
</script>
